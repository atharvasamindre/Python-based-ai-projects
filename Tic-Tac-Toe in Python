# Create board
board = [" " for i in range(9)]

# Print the board
def print_board():
    row1 = f" {board[0]} | {board[1]} | {board[2]} "
    row2 = f" {board[3]} | {board[4]} | {board[5]} "
    row3 = f" {board[6]} | {board[7]} | {board[8]} "

    print(row1)
    print("-" * len(row1))
    print(row2)
    print("-" * len(row1))
    print(row3)

# Check if the game is over
def is_game_over():
    if check_win() or check_draw():
        return True
    return False

# Check if there is a win
def check_win():
    # Rows
    for i in range(0, 9, 3):
        if board[i] == board[i + 1] == board[i + 2] != " ":
            return True
    # Columns
    for i in range(3):
        if board[i] == board[i + 3] == board[i + 6] != " ":
            return True
    # Diagonals
    if board[0] == board[4] == board[8] != " " or board[2] == board[4] == board[6] != " ":
        return True
    return False

# Check if there is a draw
def check_draw():
    return " " not in board

# Player move
def player_move(player):
    while True:
        try:
            position = int(input(f"Player {player}'s turn (1-9): ")) - 1
            if board[position] == " ":
                board[position] = player
                break
            else:
                print("This position is already taken!")
        except ValueError:
            print("Please enter a valid number between 1 and 9!")

# Start the game
def start_game():
    print("Welcome to Tic-Tac-Toe!")
    print_board()

    players = ["X", "O"]
    current_player = players[0]
    while not is_game_over():
        player_move(current_player)
        print_board()
        if current_player == "X":
            current_player = "O"
        else:
            current_player = "X"

    if check_win():
        print(f"Player {current_player} wins!")
    else:
        print("It's a draw!")

# Run the game
if __name__ == "__main__":
    start_game()
